AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS DeepRacer Research Infrastructure'

Parameters:
  ProjectName:
    Type: String
    Default: 'deepracer-research'
    Description: 'Name prefix for all resources'

  Environment:
    Type: String
    Default: 'research'
    AllowedValues: ['research', 'development', 'production']
    Description: 'Environment type'

  S3BucketSuffix:
    Type: String
    Default: 'thesis-data'
    Description: 'Suffix for S3 bucket names (must be globally unique)'

Resources:
  DeepRacerServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-deepracer-service-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - deepracer.amazonaws.com
                - sagemaker.amazonaws.com
                - robomaker.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSDeepRacerServiceRolePolicy
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/AWSRoboMakerServiceRolePolicy
      Policies:
        - PolicyName: DeepRacerResearchPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub '${ModelStorageBucket}/*'
                  - !Sub '${ModelStorageBucket}'
                  - !Sub '${TrainingDataBucket}/*'
                  - !Sub '${TrainingDataBucket}'
                  - !Sub '${LogsBucket}/*'
                  - !Sub '${LogsBucket}'
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  SageMakerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-sagemaker-execution-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      Policies:
        - PolicyName: SageMakerS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub '${ModelStorageBucket}/*'
                  - !Sub '${ModelStorageBucket}'
                  - !Sub '${TrainingDataBucket}/*'
                  - !Sub '${TrainingDataBucket}'
      Tags:
        - Key: Project
          Value: !Ref ProjectName

  ModelStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-models-${S3BucketSuffix}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 90
          - Id: TransitionToIA
            Status: Enabled
            TransitionInDays: 30
            StorageClass: STANDARD_IA
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: 'Model Storage'

  TrainingDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-training-data-${S3BucketSuffix}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: 'Training Data'

  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-logs-${S3BucketSuffix}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 365
          - Id: TransitionLogsToIA
            Status: Enabled
            TransitionInDays: 90
            StorageClass: STANDARD_IA
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: 'Training Logs'

  DeepRacerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/deepracer/${ProjectName}'
      RetentionInDays: 90
      Tags:
        - Key: Project
          Value: !Ref ProjectName

  SageMakerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/sagemaker/${ProjectName}'
      RetentionInDays: 90
      Tags:
        - Key: Project
          Value: !Ref ProjectName

  ResearchVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-vpc'
        - Key: Project
          Value: !Ref ProjectName

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ResearchVPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-public-subnet'
        - Key: Project
          Value: !Ref ProjectName

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ResearchVPC
      CidrBlock: '10.0.2.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-private-subnet'
        - Key: Project
          Value: !Ref ProjectName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-igw'
        - Key: Project
          Value: !Ref ProjectName

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref ResearchVPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ResearchVPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-public-rt'

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  DeepRacerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-deepracer-sg'
      GroupDescription: 'Security group for DeepRacer research instances'
      VpcId: !Ref ResearchVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
          Description: 'SSH access'
        - IpProtocol: tcp
          FromPort: 8888
          ToPort: 8888
          CidrIp: '0.0.0.0/0'
          Description: 'Jupyter notebook'
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: '0.0.0.0/0'
          Description: 'DeepRacer console'
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: '0.0.0.0/0'
          Description: 'All outbound traffic'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-sg'
        - Key: Project
          Value: !Ref ProjectName

  DeepRacerDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${ProjectName}-monitoring'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/DeepRacer", "TrainingReward", "ModelName", { "stat": "Average" } ],
                  [ ".", "EpisodeCompletion", ".", { "stat": "Average" } ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Training Metrics",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/S3", "NumberOfObjects", "BucketName", "${ModelStorageBucket}", "StorageType", "AllStorageTypes" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Model Storage Usage",
                "period": 86400
              }
            }
          ]
        }

Outputs:
  DeepRacerServiceRoleArn:
    Description: 'ARN of the DeepRacer service role'
    Value: !GetAtt DeepRacerServiceRole.Arn
    Export:
      Name: !Sub '${ProjectName}-deepracer-role-arn'

  SageMakerExecutionRoleArn:
    Description: 'ARN of the SageMaker execution role'
    Value: !GetAtt SageMakerExecutionRole.Arn
    Export:
      Name: !Sub '${ProjectName}-sagemaker-role-arn'

  ModelStorageBucketName:
    Description: 'Name of the S3 bucket for storing trained models'
    Value: !Ref ModelStorageBucket
    Export:
      Name: !Sub '${ProjectName}-model-bucket'

  TrainingDataBucketName:
    Description: 'Name of the S3 bucket for training data'
    Value: !Ref TrainingDataBucket
    Export:
      Name: !Sub '${ProjectName}-data-bucket'

  LogsBucketName:
    Description: 'Name of the S3 bucket for logs'
    Value: !Ref LogsBucket
    Export:
      Name: !Sub '${ProjectName}-logs-bucket'

  VPCId:
    Description: 'ID of the research VPC'
    Value: !Ref ResearchVPC
    Export:
      Name: !Sub '${ProjectName}-vpc-id'

  PublicSubnetId:
    Description: 'ID of the public subnet'
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub '${ProjectName}-public-subnet-id'

  PrivateSubnetId:
    Description: 'ID of the private subnet'
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub '${ProjectName}-private-subnet-id'

  SecurityGroupId:
    Description: 'ID of the security group'
    Value: !Ref DeepRacerSecurityGroup
    Export:
      Name: !Sub '${ProjectName}-security-group-id'

  DashboardURL:
    Description: 'URL to the CloudWatch dashboard'
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ProjectName}-monitoring'

  DeploymentSummary:
    Description: 'Summary of deployed resources'
    Value: !Sub |
      AWS DeepRacer Research Infrastructure deployed successfully!

      Resources Created:
      - IAM Roles: DeepRacer Service Role, SageMaker Execution Role
      - S3 Buckets: Models (${ModelStorageBucket}), Training Data (${TrainingDataBucket}), Logs (${LogsBucket})
      - VPC: Research environment with public/private subnets
      - CloudWatch: Monitoring dashboard and log groups
      - Security Groups: Configured for DeepRacer instances

      Project: ${ProjectName}
      Environment: ${Environment}
      Region: ${AWS::Region}
